{
  "$schema": "http://json-schema.org/schema",
  "$schemaVersion": "0.0.2",
  "$id": "https://github.com/smart-data-models/dataModel.Population/tree/master/Population/schema.json",
  "title": "Smart Data models - Population schema extension",
  "modelTags": "SPOTTED",
  "description": "The dataset contains the master data of the resident population by year and citizenship..",
  "type": "object",
  "required": [
    "id",
    "type"
  ],
  "derivedFrom": "",
  "license": "",
  "allOf": [
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"
    },
    {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Population"
          ],
          "description": "Property. NGSI Entity type. It has to be Population"
        },
        "districtName": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/Text'. Name of the District."
        },
        "districtId": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Integer'. Identification of the NIL â€“ Nucleus of Local Identity/District."
        },
        "year": {
          "type": "number",
          "minimum": 1000,
          "maximum": 3000,
          "description": "Property. Model:'https://schema.org/Integer'. Year of the population projection."
        },
        "age": {
          "type": "number",
          "description": "Property. Model:'https://schema.org/Integer'. Number of ages of the population."
        },
        "gender": {
          "description": "Property. Model:'https://schema.org/Male' 'https://schema.org/Female'. Gender of something, typically a Person, but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The gender property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender SportsTeam can be indicated with a text value of \"Mixed\".",
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Male",
                "Female"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "nationality": {
          "type": "string",
          "description": "Property. Model:'https://schema.org/nationality'. Nationality of the person."
        },
        "residents": {
          "type": "number",
          "minimum": 1,
          "description": "Property. Model:'https://schema.org/Number'. Number of residents."
        }
      }
    }
  ]
}